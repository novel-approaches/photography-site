
// Sass placholders:
%squareMiter {
  stroke-linecap: square;
  stroke-linejoin: miter;  
}

// Trash Bin Glyph Icon:
.trashcan-glyph {
  @extend %hidden;
  position: absolute;
  width: 1.5rem;
  height: auto;
  right: 1rem;
  overflow: visible;
  cursor: pointer;
  
  .trashcan-glyph-lid { @include fade(0.25s, 0s, ease, transform); }
  &:hover .trashcan-glyph-lid { @include cbTransform(rotate(-30deg) translateX(-4px)); }
}


// Check Mark Glyph Icon
.grid-item {
  .checkbox {
    @extend %br-circle;
    position: absolute;
    width: 2.25rem;
    height: 2.25rem;
    margin: 0.5rem;
    cursor: pointer;
    z-index: 3;
  }
  
  .checkbox-glyph {
    @include svgBase(1, none, 1, $theme-content-light, 0);
    @include fade();
    width: auto;
    height: inherit;
    pointer-events: visiblePainted;

    &:hover { fill-opacity: 1 !important; }
  }

  &.unchecked {
    .checkbox-glyph {
      @extend %br-circle;
      border: 3px solid $theme-content-light;
      opacity: 0.54;  
    }
  }

  &.checked {
    background-color: $shadowEmphasis;

    .checkbox-glyph {
      @extend %br-circle;
      fill: $theme-primary;
      fill-opacity: 1;
      background-color: $theme-content-light;
    }
    &:hover .checkbox-glyph { fill-opacity: 1; }
    .grid-media {
      @include cbTransform(translateZ(0) scale3d(0.89, 0.85, 1));
      margin: auto;
    }
  }
  &:hover .checkbox-glyph { fill-opacity: 0.54; }
}


// Shopping Cart Glyph Icon:
.shopping-cart-glyph {
  @include center(vertical);
  width: auto;
  height: 80%;
  overflow: visible;

  text {
    @include svgBase(1px, none, 1, $theme-content-light);
    @include cbTransform(scale(1.0079519, 0.9921108));
    font: normal normal bold 111.99184418px/125% Arial, sans-serif;
    -inkscape-font-specification: 'Arial, Bold';
    font-stretch: normal;
    text-align: start;
    text-anchor: start;
    letter-spacing: 0;
    word-spacing: 0;
    writing-mode: lr-tb;
    stroke-linecap: butt;
    stroke-linejoin: miter;
  }
  
  g {
    &[data-section='shopping-cart'] {
      @include cbTransform(translate(-94.171148px, -35.450901px));
      > g { @include cbTransform(matrix(0.99576168, 0, 0, 0.99588655, 0.43673883, 1.2169663)); }
    }
    &[data-section='cart'] > path { @include svgBase(15.00000095, $theme-content-dark, 1, none); }
    &[data-section='cart-wheels'] {
      @include cbTransform(matrix(1.2919356, 0, 0, 1.2824417, -26.130068, -85.83637));
      ellipse {
        @include svgBase(0, #DE2626, 0.80861248);
        cy: 281.60193;
        rx: 16.158911;
        ry: 16.158911;
      }
    }
    &[data-section='cart-count'] {
      @include cbTransform(translate(5px, 0));
      ellipse { @include svgBase(10.00000191, none, 1, $theme-primary); }
    }
    &[data-section='cart-frame'] path {
      @include svgBase(17.57341766, $theme-content-dark, 1, none);
      fill-rule: evenodd;
    }
    &[data-section='cart-basket'] {
      @include cbTransform(matrix(1.2919356, 0, 0, 1.2824417, -30.08257, -83.56032));
      path {
        @include svgBase(2.86625862);
        @include cbTransform(translate(98.367597px, 69.984505px));
        @extend %squareMiter;

        &:last-child { stroke-width: 2.2930069; }
      }
    }
  }
}


// Image placeholder glyph:
.image-placeholder-glyph {
  @include center(all, absolute);
  @include svgBase(10, #D0D0D0, 1, none);
  display: block;
  height: 50%;
  width: auto;
  margin: auto;

  g { @include cbTransform(translate(-204.66061px, -353.16779px)); }
}


// Grid Controls Size glyph:
.grid-controls-margins-glyph,
.grid-controls-size-glyph {
  width: 40px;
  height: auto;

  g { @include cbTransform(translate(-421.56392px, -200.81073px)); }
  path {
    @include svgBase(0)
    @extend %squareMiter;
  }
}
.grid-controls-size-glyph g { @include cbTransform(translate(0, -313.40129px)); }


// Info glyph:
.info-glyph {
  @include svgBase(0, none, 1, $theme-primary);
  width: auto;
  height: 1rem;
  margin: 0 1rem;

  g { @include cbTransform(translate(-17.027339px, -344.10155px)); }
}


// Loading spinner glyph:
.loading-spinner-glyph {
  @include center(all, absolute);
  @include cbAnimation(spinner, 2s, infinite, linear);
  height: 200px;
  left: 40%;
  top: 37.5%;

  g { @include cbTransform(translate(-273.01219px, -392.95549px)); }
  path { @include svgBase(2, none, 1, $theme-primary); }
}
